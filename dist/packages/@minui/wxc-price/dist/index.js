'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
   * 小数保留处理
   * @param priceNum 价格数字（单位元）
   * @param len 保留的小数长度
   * @param dir 取整方向，f (floor) 为向下取整，默认值；c（ceiling）为向上取整
   */
function getDecimal(priceNum, len, dir) {
  if (!priceNum || !len) {
    return false;
  }

  dir = dir || 'f';
  priceNum = parseFloat(priceNum, 10);
  len = parseInt(len, 10);

  if (dir === 'f') {
    var intNumStr = priceNum.toString().split('.')[0];
    var decimalNumStr = priceNum.toString().split('.')[1];

    return intNumStr + '.' + decimalNumStr.substring(0, len);
  } else {
    return priceNum.toFixed(len);
  }
}

exports.default = Component({
  behaviors: [],
  properties: {
    value: {
      type: [Number, String],
      value: ''
    },
    icon: {
      type: [String],
      value: ''
    },
    status: {
      type: String,
      value: ''
    },
    decimal: {
      type: String,
      value: '2'
    },
    decimalNum: {
      type: [Number, String],
      value: ''
    }
  },
  data: {},
  methods: {},
  attached: function attached() {

    if (this.data.value) {
      var value = this.data.value;

      switch (this.data.decimal) {

        // 保留一位小数
        case '1':
          {
            value = getDecimal(this.data.value, 1);
            break;
          }

        // 只显示整数
        case 'none':
          {
            value = parseInt(this.data.value);
            break;
          }

        // 小数部分缩小
        case 'small':
          {
            value = parseInt(this.data.value).toString().trim();

            this.setData({
              decimalNum: (this.data.value.toString().split('.')[1] || '00').trim()
            });
          }

      }

      this.setData({
        value: value
      });
    }
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4Lnd4YyJdLCJuYW1lcyI6WyJnZXREZWNpbWFsIiwicHJpY2VOdW0iLCJsZW4iLCJkaXIiLCJwYXJzZUZsb2F0IiwicGFyc2VJbnQiLCJpbnROdW1TdHIiLCJ0b1N0cmluZyIsInNwbGl0IiwiZGVjaW1hbE51bVN0ciIsInN1YnN0cmluZyIsInRvRml4ZWQiLCJiZWhhdmlvcnMiLCJwcm9wZXJ0aWVzIiwidmFsdWUiLCJ0eXBlIiwiTnVtYmVyIiwiU3RyaW5nIiwiaWNvbiIsInN0YXR1cyIsImRlY2ltYWwiLCJkZWNpbWFsTnVtIiwiZGF0YSIsIm1ldGhvZHMiLCJhdHRhY2hlZCIsInRyaW0iLCJzZXREYXRhIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7Ozs7QUFNRSxTQUFTQSxVQUFULENBQW9CQyxRQUFwQixFQUE4QkMsR0FBOUIsRUFBbUNDLEdBQW5DLEVBQXdDO0FBQ3RDLE1BQUksQ0FBQ0YsUUFBRCxJQUFhLENBQUNDLEdBQWxCLEVBQXVCO0FBQ3JCLFdBQU8sS0FBUDtBQUNEOztBQUVEQyxRQUFNQSxPQUFPLEdBQWI7QUFDQUYsYUFBV0csV0FBV0gsUUFBWCxFQUFxQixFQUFyQixDQUFYO0FBQ0FDLFFBQU1HLFNBQVNILEdBQVQsRUFBYyxFQUFkLENBQU47O0FBRUEsTUFBSUMsUUFBUSxHQUFaLEVBQWlCO0FBQ2YsUUFBSUcsWUFBWUwsU0FBU00sUUFBVCxHQUFvQkMsS0FBcEIsQ0FBMEIsR0FBMUIsRUFBK0IsQ0FBL0IsQ0FBaEI7QUFDQSxRQUFJQyxnQkFBZ0JSLFNBQVNNLFFBQVQsR0FBb0JDLEtBQXBCLENBQTBCLEdBQTFCLEVBQStCLENBQS9CLENBQXBCOztBQUVBLFdBQU9GLFlBQVksR0FBWixHQUFrQkcsY0FBY0MsU0FBZCxDQUF3QixDQUF4QixFQUEyQlIsR0FBM0IsQ0FBekI7QUFDRCxHQUxELE1BS087QUFDTCxXQUFPRCxTQUFTVSxPQUFULENBQWlCVCxHQUFqQixDQUFQO0FBQ0Q7QUFDRjs7O0FBTUNVLGFBQVcsRTtBQUNYQyxjQUFZO0FBQ1ZDLFdBQU87QUFDTEMsWUFBTSxDQUFDQyxNQUFELEVBQVNDLE1BQVQsQ0FERDtBQUVMSCxhQUFPO0FBRkYsS0FERztBQUtWSSxVQUFNO0FBQ0pILFlBQU0sQ0FBQ0UsTUFBRCxDQURGO0FBRUpILGFBQU87QUFGSCxLQUxJO0FBU1ZLLFlBQVE7QUFDTkosWUFBTUUsTUFEQTtBQUVOSCxhQUFPO0FBRkQsS0FURTtBQWFWTSxhQUFTO0FBQ1BMLFlBQU1FLE1BREM7QUFFUEgsYUFBTztBQUZBLEtBYkM7QUFpQlZPLGdCQUFZO0FBQ1ZOLFlBQU0sQ0FBQ0MsTUFBRCxFQUFTQyxNQUFULENBREk7QUFFVkgsYUFBTztBQUZHO0FBakJGLEc7QUFzQlpRLFFBQU0sRTtBQUNOQyxXQUFTLEU7QUFDVEMsWUFBVSxvQkFBWTs7QUFFcEIsUUFBSSxLQUFLRixJQUFMLENBQVVSLEtBQWQsRUFBcUI7QUFDbkIsVUFBSUEsUUFBUSxLQUFLUSxJQUFMLENBQVVSLEtBQXRCOztBQUVBLGNBQVEsS0FBS1EsSUFBTCxDQUFVRixPQUFsQjs7QUFFRTtBQUNBLGFBQUssR0FBTDtBQUFVO0FBQ1JOLG9CQUFRZCxXQUFXLEtBQUtzQixJQUFMLENBQVVSLEtBQXJCLEVBQTRCLENBQTVCLENBQVI7QUFDQTtBQUNEOztBQUVEO0FBQ0EsYUFBSyxNQUFMO0FBQWE7QUFDWEEsb0JBQVFULFNBQVMsS0FBS2lCLElBQUwsQ0FBVVIsS0FBbkIsQ0FBUjtBQUNBO0FBQ0Q7O0FBRUQ7QUFDQSxhQUFLLE9BQUw7QUFBYztBQUNaQSxvQkFBUVQsU0FBUyxLQUFLaUIsSUFBTCxDQUFVUixLQUFuQixFQUEwQlAsUUFBMUIsR0FBcUNrQixJQUFyQyxFQUFSOztBQUVBLGlCQUFLQyxPQUFMLENBQWE7QUFDWEwsMEJBQVksQ0FBQyxLQUFLQyxJQUFMLENBQVVSLEtBQVYsQ0FBZ0JQLFFBQWhCLEdBQTJCQyxLQUEzQixDQUFpQyxHQUFqQyxFQUFzQyxDQUF0QyxLQUE0QyxJQUE3QyxFQUFtRGlCLElBQW5EO0FBREQsYUFBYjtBQUdEOztBQXJCSDs7QUF5QkEsV0FBS0MsT0FBTCxDQUFhO0FBQ1haLGVBQU9BO0FBREksT0FBYjtBQUlEO0FBQ0YiLCJmaWxlIjoiaW5kZXgud3hjIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gICAqIOWwj+aVsOS/neeVmeWkhOeQhlxuICAgKiBAcGFyYW0gcHJpY2VOdW0g5Lu35qC85pWw5a2X77yI5Y2V5L2N5YWD77yJXG4gICAqIEBwYXJhbSBsZW4g5L+d55WZ55qE5bCP5pWw6ZW/5bqmXG4gICAqIEBwYXJhbSBkaXIg5Y+W5pW05pa55ZCR77yMZiAoZmxvb3IpIOS4uuWQkeS4i+WPluaVtO+8jOm7mOiupOWAvO+8m2PvvIhjZWlsaW5n77yJ5Li65ZCR5LiK5Y+W5pW0XG4gICAqL1xuICBmdW5jdGlvbiBnZXREZWNpbWFsKHByaWNlTnVtLCBsZW4sIGRpcikge1xuICAgIGlmICghcHJpY2VOdW0gfHwgIWxlbikge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGRpciA9IGRpciB8fCAnZic7XG4gICAgcHJpY2VOdW0gPSBwYXJzZUZsb2F0KHByaWNlTnVtLCAxMCk7XG4gICAgbGVuID0gcGFyc2VJbnQobGVuLCAxMCk7XG5cbiAgICBpZiAoZGlyID09PSAnZicpIHtcbiAgICAgIGxldCBpbnROdW1TdHIgPSBwcmljZU51bS50b1N0cmluZygpLnNwbGl0KCcuJylbMF07XG4gICAgICBsZXQgZGVjaW1hbE51bVN0ciA9IHByaWNlTnVtLnRvU3RyaW5nKCkuc3BsaXQoJy4nKVsxXTtcblxuICAgICAgcmV0dXJuIGludE51bVN0ciArICcuJyArIGRlY2ltYWxOdW1TdHIuc3Vic3RyaW5nKDAsIGxlbik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBwcmljZU51bS50b0ZpeGVkKGxlbik7XG4gICAgfVxuICB9XG5cbiAgZXhwb3J0IGRlZmF1bHQge1xuICAgIGNvbmZpZzoge1xuICAgICAgdXNpbmdDb21wb25lbnRzOiB7fVxuICAgIH0sXG4gICAgYmVoYXZpb3JzOiBbXSxcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB2YWx1ZToge1xuICAgICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLFxuICAgICAgICB2YWx1ZTogJydcbiAgICAgIH0sXG4gICAgICBpY29uOiB7XG4gICAgICAgIHR5cGU6IFtTdHJpbmddLFxuICAgICAgICB2YWx1ZTogJydcbiAgICAgIH0sXG4gICAgICBzdGF0dXM6IHtcbiAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICB2YWx1ZTogJydcbiAgICAgIH0sXG4gICAgICBkZWNpbWFsOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgdmFsdWU6ICcyJ1xuICAgICAgfSxcbiAgICAgIGRlY2ltYWxOdW06IHtcbiAgICAgICAgdHlwZTogW051bWJlciwgU3RyaW5nXSxcbiAgICAgICAgdmFsdWU6ICcnXG4gICAgICB9XG4gICAgfSxcbiAgICBkYXRhOiB7fSxcbiAgICBtZXRob2RzOiB7fSxcbiAgICBhdHRhY2hlZDogZnVuY3Rpb24gKCkge1xuXG4gICAgICBpZiAodGhpcy5kYXRhLnZhbHVlKSB7XG4gICAgICAgIGxldCB2YWx1ZSA9IHRoaXMuZGF0YS52YWx1ZTtcblxuICAgICAgICBzd2l0Y2ggKHRoaXMuZGF0YS5kZWNpbWFsKSB7XG5cbiAgICAgICAgICAvLyDkv53nlZnkuIDkvY3lsI/mlbBcbiAgICAgICAgICBjYXNlICcxJzoge1xuICAgICAgICAgICAgdmFsdWUgPSBnZXREZWNpbWFsKHRoaXMuZGF0YS52YWx1ZSwgMSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyDlj6rmmL7npLrmlbTmlbBcbiAgICAgICAgICBjYXNlICdub25lJzoge1xuICAgICAgICAgICAgdmFsdWUgPSBwYXJzZUludCh0aGlzLmRhdGEudmFsdWUpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLy8g5bCP5pWw6YOo5YiG57yp5bCPXG4gICAgICAgICAgY2FzZSAnc21hbGwnOiB7XG4gICAgICAgICAgICB2YWx1ZSA9IHBhcnNlSW50KHRoaXMuZGF0YS52YWx1ZSkudG9TdHJpbmcoKS50cmltKCk7XG5cbiAgICAgICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgICAgIGRlY2ltYWxOdW06ICh0aGlzLmRhdGEudmFsdWUudG9TdHJpbmcoKS5zcGxpdCgnLicpWzFdIHx8ICcwMCcpLnRyaW0oKVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICAgIHZhbHVlOiB2YWx1ZVxuICAgICAgICB9KTtcblxuICAgICAgfVxuICAgIH1cbiAgfSJdfQ==