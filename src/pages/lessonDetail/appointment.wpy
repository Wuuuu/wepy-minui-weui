<style lang="less" scoped>
.lesson-detail-appointment {
  .weui-input {
    font-size: 32rpxrpx;
    color: rgba(0, 0, 0, 0.8);
  }
  .button-sp-area{
      margin: 0 auto;
      padding-top: 15px;
      width: 40%;
      .weui-btn {
        border: #dd5044;
        background: #dd5044;
        color: #fff;
      }
  }
}
</style>
<template>
  <view class="lesson-detail-appointment">
    <view class="weui-cells weui-cells_after-title">
      <view class="weui-cell weui-cell_input">
          <view class="weui-cell__hd">
              <view class="weui-label">姓名:</view>
          </view>
          <view class="weui-cell__bd">
              <input class="weui-input" placeholder="请输入姓名" value="{{entity.name}}" @input="bindChange" data-field="name" />
          </view>
      </view>
      <view class="weui-cell weui-cell_input">
          <view class="weui-cell__hd">
              <view class="weui-label">手机号:</view>
          </view>
          <view class="weui-cell__bd">
              <input class="weui-input" placeholder="请输入手机号" value="{{entity.tel}}"  @input="bindChange" data-field="tel"/>
          </view>
      </view>
      <view class="weui-cell weui-cell_input">
          <view class="weui-cell__hd">
              <view class="weui-label">预约课程:</view>
          </view>
          <view class="weui-cell__bd">
              <input class="weui-input" value="{{selecteCourse}}"  disabled/>
          </view>
      </view>
      <view class="weui-cell weui-cell_input">
        <view class="weui-cell__hd">
          <view class="weui-label">预约日期:</view>
        </view>
        <view class="weui-cell__bd">
          <picker mode="date" value="{{entity.bookDate}}" @change="bindChange" data-field="bookDate">
            <view class="weui-input">{{entity.bookDate}}</view>
          </picker>
        </view>
      </view>
      <view class="weui-cell weui-cell_input">
        <view class="weui-cell__hd">
          <view class="weui-label">预约时间:</view>
        </view>
        <view class="weui-cell__bd">
          <picker mode="time" value="{{entity.bookTime}}" @change="bindChange" data-field="bookTime">
            <view class="weui-input">{{entity.bookTime}}</view>
          </picker>
        </view>
      </view>
      <view class="weui-cell weui-cell_select">
        <view class="weui-cell__hd weui-cell__hd_in-select-after">
          <view class="weui-label">选择校区</view>
        </view>
        <view class="weui-cell__bd">
          <picker mode = "selector" value="{{schoolIndex}}" range="{{school}}" @change="bindChange" data-field="schoolId" range-key="{{'name'}}">
            <view class="weui-select weui-select_in-select-after">{{school[schoolIndex].name}}</view>
          </picker>
        </view>
      </view>
    </view>
      <view class="button-sp-area">
        <button class="weui-btn" type="primary" plain="true" @tap="submitForm">提交</button>
      </view>
  </view>
</template>
<script>
  import wepy from 'wepy'

  import _ from 'underscore'
  import * as services_lesson_appointment from '../../services/lesson/detail'
  import config from '../../config/config'

  export default class Appointment extends wepy.page {
    config = {
      navigationBarTitleText: '预约试课',
      navigationBarTextStyle: 'white',
      navigationBarBackgroundColor: '#dd5044'
    }

    data = {
      selecteCourse: null,
      entity: {
        name: '',
        tel: '',
        courseId: '',
        schoolId: '',
        bookDate: '',
        bookTime: '',
      },
      confirmLoading: false,
      school: [],
      schoolIndex: 0
    }
    methods = {
      bindChange (e) {
        let self = this
        const {field} = e.currentTarget.dataset
        const {value} = e.detail
        const {entity, school} = self.data
        entity[field] = value
       
       if(field == 'schoolId'){
          self.schoolIndex = value
          console.log(value)
          entity[field] = school[self.schoolIndex].id
          self.$apply()
        }
        self.entity = entity
        console.log(entity)
        self.$apply()
      },
      submitForm () {
        let self = this
        const {entity, confirmLoading} = self.data
        if (confirmLoading) return

        self.confirmLoading = true
        wepy.showLoading({
          title: '提交中'
        })
        // 获取当前用户信息
        const unionuser = config.getUnionuser()
        let studentId = unionuser.id || ''

        let data = {
          ...entity,
          studentId
        }
        // services_lesson_appointment.submit({
        //   data,
        //   success: (res) => {
        //     wepy.hideLoading()
        //     wepy.showToast({
        //       title: "提交成功!"
        //     })
        //   }
        // })
        self.$apply()
        self.checkEntity(entity, null, (errors) => {
          if (!_.isEmpty(errors)) {
            let errs = []
            for (var index in errors) {
              errs.push(errors[index])
            }
            wx.showToast({ title: errs[0], duration: 1500 })
            self.confirmLoading = false 

            self.$apply()
            wx.hideLoading()
            return;
          }
          // 获取当前用户信息
          const unionuser = config.getUnionuser()
          let studentId = unionuser.id || ''
          
          services_lesson_appointment.submit({
            data,
            success: (res) => {
              wepy.hideLoading()
              wepy.showToast({
                title: "提交成功!"
              })
            }
          })
        })
      }
    }
    onLoad(params) {
      let self = this
      const {entity} = self.data
      entity.courseId = params.id
      self.selecteCourse = params.name
      self.entity = entity
      self.$apply()
    }
    onShow () {
      let self =this
      const {courseId} =self.data.entity
      services_lesson_appointment.query({
        params: {
          id: courseId,
          _info: 'course_schools<school>'
        },
        success: (res) => {
          let school = []
          for (let i in res.course_schools) {
           school.push(res.course_schools[i].school) 
          }
          self.school = school
          console.log(school)
          self.$apply()
        }
      })
    }
    checkEntity (entity, field, callback) {
      let errors = {}
      if (_.isEmpty(entity.tel)) {
        errors.tel = '手机号不能为空'
      }
      if (_.isEmpty(entity.name)) {
        errors.name = '姓名不能为空'
      }
      if (_.isEmpty(entity.schoolId)) {
        errors.schoolId = '校区不能为空'
      }
      if (_.isEmpty(entity.bookDate)) {
        errors.bookDate = '预约日期不能为空'
      }
      if (_.isEmpty(entity.bookTime)) {
        errors.bookTime = '预约时间不能为空'
      }
      callback(errors)
    }
  }

</script>
