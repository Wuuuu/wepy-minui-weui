<style lang="less">
.calendar-container {
  .header {
    display: flex;
    text-align: center;
    justify-content: center;
    align-items: center;
    height: 100rpx;
    .prev-month, .next-month {
      flex: 0 0 180rpx;
    }
    .cur-month {
      flex: 1;
    }
  }
  .calendar-week {
    display: flex;
    justify-content: center;
    align-items: center;
    border-bottom: 1px solid #efefef;
    .weeks-grid {
      text-align: center;
      flex: 107.1428571429rpx;
      color: #dd5044;
    }
  }
  .calendar-days {
    display: flex;
    // align-items: center;
    flex-wrap: wrap;
    .days-grid {
      text-align: center;
      height: 100rpx;
      width: 107.1428571429rpx;
      border-bottom: 1px solid #eee;
      .day {
        padding-top: 24rpx;
      }
    }
    .days-grid-active {
      background: rgba(218, 90, 112, 0.4);
      border-radius: 16rpx;
    }
  }
}
</style>
<template>
  <view class="calendar-container">
    <view class="header">
      <view class="prev-month" @tap="handleCalendar" data-action="prev">上一月</view>
      <view class="cur-month">{{currentYear}}-{{currentMonth}}-{{currentDay}}</view>
      <view class="next-month" @tap="handleCalendar" data-action="next">下一月</view>  
    </view>
    <view class="calendar-week">
      <repeat for="{{weeks_ch}}" item="week">
        <view class="weeks-grid">{{week}}</view>
      </repeat>
    </view>
    <view class="calendar-days">
      <view wx:if="{{true}}" class="days-grid" wx:for="{{empytGrids}}" wx:key="{{index}}" data-idx="{{index}}"></view>
      <repeat for="{{days}}" key="key" index="index" item="item">
        <view class="days-grid {{ currentDay == index+1 ? 'days-grid-active' : ''}} " data-idx="{{index}}" @tap="handleDayItem">
          <view class="day">{{item.day}}</view>
        </view>
      </repeat>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import moment from '../utils/moment'

  export default class Calendar extends wepy.component {
    props = {
    }
    data = { 
      currentDate: moment().format("YYYY-MM-DD"), // 获取当前日期 YYYY-MM-DD
      currentMonth: moment().month()+1,             // 当前月份
      currentYear: moment().year(),               // 当前年份
      currentDay: moment().dayOfYear(),               // 当前天
      startOfMonth: moment().startOf('week').format("DD"),
      endOfMonth: moment().add(20, 'd').format("YYYY-MM-DD"),
      // getFirstDayOfTheWeek: moment([2018, 0, 28]).add(7, 'd').format("YYYY-MM-DD"),
      days: [],  // 每个月的天数
      weeks_ch: [],
      empytGrids: [],
      hasEmptyGrid: false
    }
    methods = {
      handleCalendar (e) {
        let self = this
        const { action } = e.currentTarget.dataset
        if (action == 'prev') {
          let prevMonth = self.currentMonth -1 
          let prevYear = self.currentYear
          console.log(`prev:${prevYear}-${prevMonth}`)
          if(prevMonth < 1) {
            prevYear = self.currentYear - 1
				    prevMonth = 12
          }
          self.calDays(prevYear, prevMonth)
          self.calEmptyGrid(prevYear, prevMonth)

          self.currentYear = prevYear
          self.currentMonth = prevMonth
          self.$apply()
          console.log(`当前年月${self.currentYear}-${self.currentMonth}`)
        } else {
          let nextMonth = self.currentMonth + 1
          let nextYear = self.currentYear
          if (nextMonth > 12) {
            nextYear = self.currentYear + 1 
            nextMonth = 1
          } 
          self.calDays(nextYear, nextMonth)
          self.calEmptyGrid(nextYear, nextMonth)

          self.currentYear = nextYear
          self.currentMonth = nextMonth
          self.$apply()
          console.log(`当前年月${self.currentYear}-${self.currentMonth}`)
        }
        console.log(action)
      },
      handleDayItem (e) {
        let self = this
        const { idx } = e.currentTarget.dataset
		    const days = self.days
	    	days[ idx ].choosed = !days[ idx ].choosed
        self.days = days
        self.$apply()
        console.log(idx+1)
      }
    }
    onLoad() {
      let self = this
      console.log(`本周起始日：${self.currentYear}-${self.currentMonth}-${self.startOfMonth}`)
      const weeks_ch = [ '日', '一', '二', '三', '四', '五', '六' ]
      self.weeks_ch = weeks_ch
      self.$apply();
      self.calEmptyGrid(self.currentYear, self.currentMonth)
      self.calDays(self.currentYear, self.currentMonth)
    }
    calEmptyGrid (year, month) {
      let self = this
      let firstDayOfWeek = new Date(Date.UTC(year, month - 1, 1)).getDay()
      let empytGrids = []
        if( firstDayOfWeek > 0 ) {
          for (let i = 0; i < firstDayOfWeek; i++) {
            empytGrids.push(i)
          }
          self.empytGrids = empytGrids
          self.hasEmptyGrid = true
          self.$apply();
        } else {
          self.empytGrids = []
          self.hasEmptyGrid = false
          self.$apply();
        }
      console.log(`每个月空格数:${self.empytGrids}`)
    }
    calDays (year, month) {
      let self = this 
      let days = []
      // const thisMonthDays = new Date(year, month, 0).getDate() // 获取当前月的天数(eg: 1月 31天)  
      let thisMonthDays = params
      for (let i = 1; i <= thisMonthDays; i++) {
        days.push({
          day: i,
          choosed: false
        })
      }
      self.days = days
      self.$apply()
    }
}

</script>
